{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ScanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/a11y-checker-lambda-prod-scan"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": ["-", ["a11y-checker-lambda", "prod", "lambda"]]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["logs:CreateLogStream", "logs:CreateLogGroup"],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/a11y-checker-lambda-prod*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": ["logs:PutLogEvents"],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/a11y-checker-lambda-prod*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": ["IssueTable", "Arn"]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    "arn:aws:sqs:us-west-2:830473435438:canvas-live-events-weston"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "a11y-checker-lambda",
              "prod",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CommonLibsLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/a11y-checker-lambda/prod/1635790531817-2021-11-01T18:15:31.817Z/commonLibs.zip"
        },
        "LayerName": "commonLibs",
        "CompatibleRuntimes": ["nodejs12.x"]
      }
    },
    "ScanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/a11y-checker-lambda/prod/1635796587976-2021-11-01T19:56:27.976Z/a11y-checker-lambda.zip"
        },
        "Handler": "handler.scan",
        "Runtime": "nodejs12.x",
        "FunctionName": "a11y-checker-lambda-prod-scan",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "tableName": "prod-issues",
            "foo": "bar"
          }
        },
        "Role": {
          "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]
        },
        "Layers": [
          {
            "Ref": "CommonLibsLambdaLayer"
          }
        ]
      },
      "DependsOn": ["ScanLogGroup"]
    },
    "ScanLambdaVersionqUGx3kBEsOcclsF42M8tcoJbqtmTOljDQyEUjImEQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ScanLambdaFunction"
        },
        "CodeSha256": "DyxOriQSnctLnPifFzSn0o4E1kMd3AGcaD27NTEZAN4="
      }
    },
    "ScanEventSourceMappingSQSCanvasliveeventsweston": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": ["IamRoleLambdaExecution"],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": "arn:aws:sqs:us-west-2:830473435438:canvas-live-events-weston",
        "FunctionName": {
          "Fn::GetAtt": ["ScanLambdaFunction", "Arn"]
        },
        "Enabled": true
      }
    },
    "IssueTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "prod-issues",
        "AttributeDefinitions": [
          {
            "AttributeName": "Context",
            "AttributeType": "S"
          },
          {
            "AttributeName": "AccountUUID",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Context",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "UserIdIndex",
            "KeySchema": [
              {
                "AttributeName": "AccountUUID",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            }
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-a11y-checker-lambda-prod-ServerlessDeploymentBucketName"
      }
    },
    "CommonLibsLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "CommonLibsLambdaLayer"
      },
      "Export": {
        "Name": "sls-a11y-checker-lambda-prod-CommonLibsLambdaLayerQualifiedArn"
      }
    },
    "CommonLibsLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "083988edf234773dc9b35e217451d2875a1010e2",
      "Export": {
        "Name": "sls-a11y-checker-lambda-prod-CommonLibsLambdaLayerHash"
      }
    },
    "CommonLibsLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/a11y-checker-lambda/prod/1635790531817-2021-11-01T18:15:31.817Z/commonLibs.zip",
      "Export": {
        "Name": "sls-a11y-checker-lambda-prod-CommonLibsLambdaLayerS3Key"
      }
    },
    "ScanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ScanLambdaVersionqUGx3kBEsOcclsF42M8tcoJbqtmTOljDQyEUjImEQ"
      },
      "Export": {
        "Name": "sls-a11y-checker-lambda-prod-ScanLambdaFunctionQualifiedArn"
      }
    }
  }
}
